{"version":3,"sources":["cometChat.js","store/index.jsx","firebase.js","shared/Freshers.js","components/Header.jsx","views/Product.jsx","components/Food.jsx","components/Foods.jsx","views/Home.jsx","components/Register.jsx","views/SignUp.jsx","components/Login.jsx","views/SignIn.jsx","AuthGuard.jsx","views/EditProduct.jsx","views/AddProduct.jsx","components/CartItem.jsx","views/Cart.jsx","views/Chat.jsx","views/ChatList.jsx","App.jsx","index.jsx"],"names":["CONSTANTS","process","initCometChat","a","appID","region","appSetting","CometChat","AppSettingsBuilder","subscribePresenceForAllUsers","setRegion","build","init","then","console","log","loginWithCometChat","UID","authKey","login","user","signInWithCometChat","name","User","setName","createUser","logOutWithCometChat","logout","getMessages","MessagesRequestBuilder","setUID","setLimit","messagesRequest","fetchPrevious","messages","sendMessage","receiverID","messageText","receiverType","RECEIVER_TYPE","USER","TextMessage","textMessage","message","getConversations","conversationsRequest","ConversationsRequestBuilder","fetchNext","conversationList","createGlobalState","isLoggedIn","alert","show","msg","color","cart","contract","connectedAccount","ethToUsd","setGlobalState","useGlobalState","setAlert","setTimeout","latestPrice","fetch","data","json","res","USD","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","logInWithEmailAndPassword","email","password","signInWithEmailAndPassword","JSON","stringify","registerWithEmailAndPassword","fullname","phone","account","address","createUserWithEmailAndPassword","userDocRef","doc","setDoc","uid","signOut","addToOrders","order","Math","random","toString","substring","toUpperCase","timestamp","serverTimestamp","addDoc","collection","currentUser","addProduct","product","price","description","imgURL","stock","getProducts","products","query","collectionGroup","orderBy","getDocs","snapshot","docs","map","id","Number","getProduct","find","updateProduct","productRef","updateDoc","deleteProduct","deleteDoc","ethereum","window","getContract","web3","eth","net","getId","networkId","networkData","Store","networks","Contract","abi","payWithEthers","seller","buyer","amount","utils","toWei","purpose","methods","payNow","send","from","value","connectWallet","request","method","accounts","loadWeb3","Web3","enable","currentProvider","getAccounts","Header","useState","openNavbar","setOpenNavbar","navigate","useNavigate","navbar","to","onClick","ripple","open","leftSide","rightSide","active","className","length","Product","num","useParams","setProduct","useEffect","qty","src","alt","toLocaleString","style","currency","item","added","cartItems","newItem","_item","size","toFixed","buttonType","Food","addToCart","disabled","Foods","i","Home","setProducts","filter","Register","setFullname","setEmail","setPassword","setPhone","setAddress","setAccount","handleRegister","e","preventDefault","resetForm","onSubmit","type","placeholder","onChange","target","required","SignUp","Login","handleLogin","SignIn","AuthGuard","children","redirectPath","replace","EditProduct","setPrice","setImgURL","setDescription","min","step","AddProduct","CartItem","setQty","toCurrency","rounded","raised","date","block","iconOnly","index","indexOf","splice","Cart","total","setTotal","forEach","getTotal","Chat","setMessage","setMessages","scrollToEnd","elmnt","document","getElementById","scrollTop","scrollHeight","listenerID","msgs","addMessageListener","MessageListener","onTextMessageReceived","prevState","height","receiverId","toLowerCase","text","Conversation","conversation","owner","possessor","key","sender","receiver","seconds","floor","Date","interval","timeAgo","sentAt","getTime","ChatList","customers","setCustomers","loaded","setLoaded","customer","lastMessage","App","setUser","isLoaded","setIsLoaded","onAuthStateChanged","path","element","ReactDOM","render"],"mappings":"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","file":"static/js/main.ff3b6bfa.chunk.js","sourcesContent":["import { CometChat } from '@cometchat-pro/chat'\r\n\r\nconst CONSTANTS = {\r\n  APP_ID: process.env.REACT_APP_COMET_CHAT_APP_ID,\r\n  REGION: process.env.REACT_APP_COMET_CHAT_REGION,\r\n  Auth_Key: process.env.REACT_APP_COMET_CHAT_AUTH_KEY,\r\n}\r\n\r\nconst initCometChat = async () => {\r\n  try {\r\n    const appID = CONSTANTS.APP_ID\r\n    const region = CONSTANTS.REGION\r\n\r\n    const appSetting = new CometChat.AppSettingsBuilder()\r\n      .subscribePresenceForAllUsers()\r\n      .setRegion(region)\r\n      .build()\r\n\r\n    await CometChat.init(appID, appSetting).then(() =>\r\n      console.log('Initialization completed successfully')\r\n    )\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst loginWithCometChat = async (UID) => {\r\n  try {\r\n    const authKey = CONSTANTS.Auth_Key\r\n    await CometChat.login(UID, authKey).then((user) =>\r\n      console.log('Login Successful:', { user })\r\n    )\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst signInWithCometChat = async (UID, name) => {\r\n  try {\r\n    let authKey = CONSTANTS.Auth_Key\r\n    const user = new CometChat.User(UID)\r\n    user.setName(name)\r\n\r\n    return await CometChat.createUser(user, authKey).then((user) => user)\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst logOutWithCometChat = async () => {\r\n  try {\r\n    await CometChat.logout().then(() => console.log('Logged Out Successfully'))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst getMessages = async (UID) => {\r\n  try {\r\n    const limit = 30\r\n    const messagesRequest = await new CometChat.MessagesRequestBuilder()\r\n      .setUID(UID)\r\n      .setLimit(limit)\r\n      .build()\r\n\r\n    return await messagesRequest.fetchPrevious().then((messages) => messages)\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst sendMessage = async (receiverID, messageText) => {\r\n  try {\r\n    const receiverType = CometChat.RECEIVER_TYPE.USER\r\n    const textMessage = await new CometChat.TextMessage(\r\n      receiverID,\r\n      messageText,\r\n      receiverType\r\n    )\r\n\r\n    return await CometChat.sendMessage(textMessage).then((message) => message)\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst getConversations = async () => {\r\n  try {\r\n    const limit = 30\r\n    const conversationsRequest = new CometChat.ConversationsRequestBuilder()\r\n      .setLimit(limit)\r\n      .build()\r\n\r\n    return await conversationsRequest\r\n      .fetchNext()\r\n      .then((conversationList) => conversationList)\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport {\r\n  initCometChat,\r\n  loginWithCometChat,\r\n  signInWithCometChat,\r\n  logOutWithCometChat,\r\n  getMessages,\r\n  sendMessage,\r\n  getConversations,\r\n}\r\n","import { createGlobalState } from 'react-hooks-global-state'\r\n\r\nconst { setGlobalState, useGlobalState } = createGlobalState({\r\n  isLoggedIn: false,\r\n  alert: { show: false, msg: '', color: '' },\r\n  cart: [],\r\n  contract: null,\r\n  connectedAccount: '',\r\n  ethToUsd: 0,\r\n})\r\n\r\nconst setAlert = (msg, color = 'amber') => {\r\n  setGlobalState('alert', { show: true, msg, color })\r\n  setTimeout(() => {\r\n    setGlobalState('alert', { show: false, msg: '', color })\r\n  }, 5000)\r\n}\r\n\r\nconst latestPrice = async () => {\r\n  await fetch(\r\n    'https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD'\r\n  )\r\n    .then((data) => data.json())\r\n    .then((res) => setGlobalState('ethToUsd', res.USD))\r\n}\r\n\r\nexport { useGlobalState, setGlobalState, setAlert, latestPrice }\r\n","import { initializeApp } from 'firebase/app'\r\nimport { setAlert } from './store'\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from 'firebase/auth'\r\n\r\nimport {\r\n  getFirestore,\r\n  query,\r\n  getDocs,\r\n  updateDoc,\r\n  collection,\r\n  collectionGroup,\r\n  orderBy,\r\n  deleteDoc,\r\n  addDoc,\r\n  doc,\r\n  setDoc,\r\n  serverTimestamp,\r\n} from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FB_AUTH_KEY,\r\n  authDomain: 'fresher-a5113.firebaseapp.com',\r\n  projectId: 'fresher-a5113',\r\n  storageBucket: 'fresher-a5113.appspot.com',\r\n  messagingSenderId: '443136794867',\r\n  appId: process.env.REACT_APP_FB_APP_ID,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\nconst db = getFirestore(app)\r\n\r\nconst logInWithEmailAndPassword = async (email, password) => {\r\n  try {\r\n    return await signInWithEmailAndPassword(auth, email, password).then(\r\n      (res) => res.user\r\n    )\r\n  } catch (error) {\r\n    setAlert(JSON.stringify(error), 'red')\r\n  }\r\n}\r\n\r\nconst registerWithEmailAndPassword = async (\r\n  email,\r\n  password,\r\n  fullname,\r\n  phone,\r\n  account,\r\n  address\r\n) => {\r\n  try {\r\n    const res = await createUserWithEmailAndPassword(auth, email, password)\r\n    const user = res.user\r\n    const userDocRef = doc(db, 'users', user.email)\r\n\r\n    await setDoc(userDocRef, {\r\n      uid: user.uid,\r\n      fullname,\r\n      email,\r\n      phone,\r\n      account,\r\n      address,\r\n    })\r\n\r\n    return user\r\n  } catch (error) {\r\n    setAlert(JSON.stringify(error), 'red')\r\n  }\r\n}\r\n\r\nconst logout = async () => {\r\n  try {\r\n    await signOut(auth)\r\n    return true\r\n  } catch (error) {\r\n    setAlert(JSON.stringify(error), 'red')\r\n  }\r\n}\r\n\r\nconst addToOrders = async (cart) => {\r\n  try {\r\n    const order = {\r\n      order: Math.random().toString(36).substring(2, 9).toUpperCase(),\r\n      timestamp: serverTimestamp(),\r\n      cart,\r\n    }\r\n\r\n    await addDoc(\r\n      collection(db, `users/${auth.currentUser.email}`, 'orders'),\r\n      order\r\n    )\r\n    return order\r\n  } catch (error) {\r\n    setAlert(JSON.stringify(error), 'red')\r\n  }\r\n}\r\n\r\nconst addProduct = async (product) => {\r\n  try {\r\n    await addDoc(\r\n      collection(db, `users/${auth.currentUser.email}`, 'products'),\r\n      {\r\n        name: product.name,\r\n        uid: auth.currentUser.uid,\r\n        email: auth.currentUser.email,\r\n        price: product.price,\r\n        description: product.description,\r\n        account: product.account,\r\n        imgURL: product.imgURL,\r\n        stock: ((Math.random() * 10) | 0) + 1,\r\n        timestamp: serverTimestamp(),\r\n      }\r\n    )\r\n  } catch (error) {\r\n    setAlert(JSON.stringify(error), 'red')\r\n  }\r\n}\r\n\r\nconst getProducts = async () => {\r\n  try {\r\n    const products = query(\r\n      collectionGroup(db, 'products'),\r\n      orderBy('timestamp', 'desc')\r\n    )\r\n    const snapshot = await getDocs(products)\r\n\r\n    return snapshot.docs.map((doc) => ({\r\n      id: doc.id,\r\n      ...doc.data(),\r\n      price: Number(doc.data().price),\r\n    }))\r\n  } catch (error) {\r\n    setAlert(JSON.stringify(error), 'red')\r\n  }\r\n}\r\n\r\nconst getProduct = async (id) => {\r\n  try {\r\n    const products = query(\r\n      collectionGroup(db, 'products'),\r\n      orderBy('timestamp', 'desc')\r\n    )\r\n    const snapshot = await getDocs(products)\r\n\r\n    const product = snapshot.docs.find((doc) => doc.id == id)\r\n    return {\r\n      id: product.id,\r\n      ...product.data(),\r\n      price: Number(product.data().price),\r\n    }\r\n  } catch (error) {\r\n    setAlert(JSON.stringify(error), 'red')\r\n  }\r\n}\r\n\r\nconst updateProduct = async (product) => {\r\n  const productRef = doc(db, `users/${product.email}/products`, product.id)\r\n  try {\r\n    await updateDoc(productRef, product)\r\n  } catch (error) {\r\n    setAlert(JSON.stringify(error), 'red')\r\n  }\r\n}\r\n\r\nconst deleteProduct = async (product) => {\r\n  const productRef = doc(db, `users/${product.email}/products`, product.id)\r\n  try {\r\n    await deleteDoc(productRef)\r\n  } catch (error) {\r\n    setAlert(JSON.stringify(error), 'red')\r\n  }\r\n}\r\n\r\nexport {\r\n  auth,\r\n  db,\r\n  logInWithEmailAndPassword,\r\n  registerWithEmailAndPassword,\r\n  logout,\r\n  onAuthStateChanged,\r\n  addProduct,\r\n  addToOrders,\r\n  getProducts,\r\n  getProduct,\r\n  updateProduct,\r\n  deleteProduct,\r\n}\r\n","import Web3 from 'web3'\r\nimport { setAlert, setGlobalState } from '../store'\r\nimport Store from './abis/Store.json'\r\n\r\nconst { ethereum } = window\r\n\r\nconst getContract = async () => {\r\n  const web3 = window.web3\r\n  const networkId = await web3.eth.net.getId()\r\n  const networkData = Store.networks[networkId]\r\n\r\n  if (networkData) {\r\n    const contract = new web3.eth.Contract(Store.abi, networkData.address)\r\n    return contract\r\n  } else {\r\n    window.alert('Store contract not deployed to detected network.')\r\n  }\r\n}\r\n\r\nconst payWithEthers = async (product) => {\r\n  try {\r\n    const web3 = window.web3\r\n    const seller = product.account\r\n    const buyer = product.buyer\r\n    const amount = web3.utils.toWei(product.price.toString(), 'ether')\r\n    const purpose = `Sales of ${product.name}`\r\n\r\n    const contract = await getContract()\r\n    await contract.methods\r\n      .payNow(seller, purpose)\r\n      .send({ from: buyer, value: amount })\r\n    return true\r\n  } catch (error) {\r\n    setAlert(error.message, 'red')\r\n  }\r\n}\r\n\r\nconst connectWallet = async () => {\r\n  try {\r\n    if (!ethereum) return alert('Please install Metamask')\r\n    const accounts = await ethereum.request({ method: 'eth_requestAccounts' })\r\n    setGlobalState('connectedAccount', accounts[0])\r\n  } catch (error) {\r\n    setAlert(JSON.stringify(error), 'red')\r\n  }\r\n}\r\n\r\nconst loadWeb3 = async () => {\r\n  try {\r\n    if (!ethereum) return alert('Please install Metamask')\r\n\r\n    window.web3 = new Web3(ethereum)\r\n    await ethereum.enable()\r\n\r\n    window.web3 = new Web3(window.web3.currentProvider)\r\n\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n    setGlobalState('connectedAccount', accounts[0])\r\n  } catch (error) {\r\n    alert('Please connect your metamask wallet!')\r\n  }\r\n}\r\n\r\nexport { loadWeb3, connectWallet, payWithEthers }\r\n","import { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { setAlert, useGlobalState } from '../store'\r\nimport { logout } from '../firebase'\r\nimport { logOutWithCometChat } from '../cometChat'\r\nimport { connectWallet } from '../shared/Freshers'\r\nimport Navbar from '@material-tailwind/react/Navbar'\r\nimport NavbarContainer from '@material-tailwind/react/NavbarContainer'\r\nimport NavbarWrapper from '@material-tailwind/react/NavbarWrapper'\r\nimport NavbarBrand from '@material-tailwind/react/NavbarBrand'\r\nimport NavbarToggler from '@material-tailwind/react/NavbarToggler'\r\nimport NavbarCollapse from '@material-tailwind/react/NavbarCollapse'\r\nimport Nav from '@material-tailwind/react/Nav'\r\nimport NavItem from '@material-tailwind/react/NavItem'\r\n\r\nconst Header = () => {\r\n  const [openNavbar, setOpenNavbar] = useState(false)\r\n  const [cart] = useGlobalState('cart')\r\n  const [isLoggedIn] = useGlobalState('isLoggedIn')\r\n  const [connectedAccount] = useGlobalState('connectedAccount')\r\n  const navigate = useNavigate()\r\n\r\n  const handleSignOut = () => {\r\n    logout().then((res) => {\r\n      if (res) {\r\n        logOutWithCometChat().then(() => {\r\n          setAlert('Logged out successfully')\r\n          navigate('/signin')\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Navbar color=\"green\" navbar>\r\n      <NavbarContainer>\r\n        <NavbarWrapper>\r\n          <Link to=\"/\">\r\n            <NavbarBrand>Freshers</NavbarBrand>\r\n          </Link>\r\n          <NavbarToggler\r\n            color=\"white\"\r\n            onClick={() => setOpenNavbar(!openNavbar)}\r\n            ripple=\"white\"\r\n          />\r\n        </NavbarWrapper>\r\n\r\n        <NavbarCollapse open={openNavbar}>\r\n          {isLoggedIn ? (\r\n            <Nav leftSide>\r\n              <NavItem ripple=\"light\">\r\n                <Link to=\"/customers\">customers</Link>\r\n              </NavItem>\r\n              <NavItem ripple=\"light\">\r\n                <Link to=\"/product/add\">Add Product</Link>\r\n              </NavItem>\r\n            </Nav>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Nav rightSide>\r\n            {isLoggedIn ? (\r\n              <>\r\n                {connectedAccount ? null : (\r\n                  <NavItem\r\n                    onClick={connectWallet}\r\n                    active=\"light\"\r\n                    ripple=\"light\"\r\n                  >\r\n                    <span className=\"cursor-pointer\">Connect Wallet</span>\r\n                  </NavItem>\r\n                )}\r\n                <NavItem onClick={handleSignOut} ripple=\"light\">\r\n                  <span className=\"cursor-pointer\">Logout</span>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <NavItem ripple=\"light\">\r\n                <Link to=\"/signin\" className=\"cursor-pointer\">\r\n                  Login\r\n                </Link>\r\n              </NavItem>\r\n            )}\r\n\r\n            <NavItem ripple=\"light\">\r\n              <Link to=\"/cart\">{cart.length} Cart</Link>\r\n            </NavItem>\r\n          </Nav>\r\n        </NavbarCollapse>\r\n      </NavbarContainer>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import Header from '../components/Header'\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport { Button, CardImage } from '@material-tailwind/react'\r\nimport { getProduct, deleteProduct, auth } from '../firebase'\r\nimport { setGlobalState, useGlobalState, setAlert } from '../store'\r\nimport { payWithEthers } from '../shared/Freshers'\r\n\r\nconst Product = () => {\r\n  const { id } = useParams()\r\n  const navigate = useNavigate()\r\n  const [product, setProduct] = useState(null)\r\n  const [cart] = useGlobalState('cart')\r\n  const [isLoggedIn] = useGlobalState('isLoggedIn')\r\n  const [buyer] = useGlobalState('connectedAccount')\r\n  const [ethToUsd] = useGlobalState('ethToUsd')\r\n\r\n  const addToCart = () => {\r\n    const item = product\r\n    item.added = true\r\n    let cartItems = [...cart]\r\n    const newItem = { ...item, qty: (item.qty += 1), stock: (item.stock -= 1) }\r\n    if (cart.find((_item) => _item.id == item.id)) {\r\n      cartItems[item] = newItem\r\n      setGlobalState('cart', [...cartItems])\r\n    } else {\r\n      setGlobalState('cart', [...cartItems, newItem])\r\n    }\r\n    setAlert('Product added to cart')\r\n  }\r\n\r\n  const handlePayWithEthers = () => {\r\n    const item = { ...product, buyer, price: (product.price / ethToUsd).toFixed(4) }\r\n    payWithEthers(item).then((res) => {\r\n      if (res) setAlert('Product purchased!')\r\n    })\r\n  }\r\n\r\n  const handleDeleteProduct = () => {\r\n    deleteProduct(product).then(() => {\r\n      setAlert('Product deleted!')\r\n      navigate('/')\r\n    })\r\n  }\r\n\r\n  const toCurrency = (num) =>\r\n    num.toLocaleString('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n    })\r\n\r\n  useEffect(() => {\r\n    getProduct(id).then((data) => setProduct({ ...data, qty: 1 }))\r\n  }, [id])\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <Header />\r\n      {!!product ? (\r\n        <div className=\"flex flex-wrap justify-start items-center p-10\">\r\n          <div className=\"mt-4 w-64\">\r\n            <CardImage src={product.imgURL} alt={product.name} />\r\n          </div>\r\n\r\n          <div className=\"mt-4 lg:mt-0 lg:row-span-6 mx-4\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-extrabold tracking-tight text-gray-900 sm:text-3xl\">\r\n                {product.name}\r\n              </h1>\r\n              <h2 className=\"sr-only\">Product information</h2>\r\n              <div className=\"flex flex-row justify-start items-center\">\r\n                <span className=\"text-xl font-bold text-green-500\">\r\n                  {toCurrency(product.price)}\r\n                </span>\r\n                <span className=\"text-xs mx-4\">\r\n                  {product.stock} left in stock\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"mt-2 space-y-6\">\r\n                <p className=\"text-base text-gray-900\">{product.description}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-4 flex flex-row justify-start items-center space-x-2\">\r\n              <Button\r\n                onClick={addToCart}\r\n                color=\"green\"\r\n                size=\"md\"\r\n                ripple=\"light\"\r\n              >\r\n                Add To Cart\r\n              </Button>\r\n\r\n              {isLoggedIn ? (\r\n                <>\r\n                  {auth.currentUser.uid != product.uid &&\r\n                  product.account != buyer ? (\r\n                    <Button\r\n                      onClick={handlePayWithEthers}\r\n                      color=\"amber\"\r\n                      size=\"md\"\r\n                      ripple=\"light\"\r\n                    >\r\n                      Buy with ETH\r\n                    </Button>\r\n                  ) : null}\r\n\r\n                  {auth.currentUser.uid == product.uid ? null : (\r\n                    <Button\r\n                      onClick={() => navigate('/chat/' + product.uid)}\r\n                      buttonType=\"link\"\r\n                      color=\"green\"\r\n                      size=\"md\"\r\n                      ripple=\"light\"\r\n                    >\r\n                      Chat WIth Seller\r\n                    </Button>\r\n                  )}\r\n                </>\r\n              ) : null}\r\n              {isLoggedIn && auth.currentUser.uid == product.uid ? (\r\n                <>\r\n                  <Button\r\n                    onClick={() => navigate('/product/edit/' + id)}\r\n                    buttonType=\"link\"\r\n                    color=\"green\"\r\n                    size=\"md\"\r\n                    ripple=\"light\"\r\n                  >\r\n                    Edit Product\r\n                  </Button>\r\n                  <Button\r\n                    onClick={handleDeleteProduct}\r\n                    buttonType=\"link\"\r\n                    color=\"red\"\r\n                    size=\"md\"\r\n                    ripple=\"light\"\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport Card from '@material-tailwind/react/Card'\r\nimport CardImage from '@material-tailwind/react/CardImage'\r\nimport CardBody from '@material-tailwind/react/CardBody'\r\nimport CardFooter from '@material-tailwind/react/CardFooter'\r\nimport H6 from '@material-tailwind/react/Heading6'\r\nimport Paragraph from '@material-tailwind/react/Paragraph'\r\nimport Button from '@material-tailwind/react/Button'\r\nimport { setAlert, setGlobalState, useGlobalState } from '../store'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Food = ({ item }) => {\r\n  const [cart] = useGlobalState('cart')\r\n\r\n  const addToCart = (item) => {\r\n    item.added = true\r\n    let cartItems = [...cart]\r\n    const newItem = { ...item, qty: (item.qty += 1), stock: (item.stock -= 1) }\r\n    if (cart.find((_item) => _item.id == item.id)) {\r\n      cartItems[item] = newItem\r\n      setGlobalState('cart', [...cartItems])\r\n    } else {\r\n      setGlobalState('cart', [...cartItems, newItem])\r\n    }\r\n    setAlert(`${item.name} added to cart!`)\r\n  }\r\n\r\n  const toCurrency = (num) =>\r\n    num.toLocaleString('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n    })\r\n\r\n  return (\r\n    <div className=\"mx-4 my-6 w-64\">\r\n      <Card>\r\n        <Link to={`/product/` + item.id}>\r\n          <CardImage src={item.imgURL} alt={item.name} />\r\n        </Link>\r\n\r\n        <CardBody>\r\n          <Link to={`/product/` + item.id}>\r\n            <H6 color=\"gray\">{item.name}</H6>\r\n          </Link>\r\n\r\n          <Paragraph color=\"gray\">\r\n            Don't be scared of the truth because we need to...\r\n          </Paragraph>\r\n\r\n          <div\r\n            color=\"black\"\r\n            className=\"flex flex-row justify-between items-center\"\r\n          >\r\n            <span className=\"font-semibold text-green-500\">\r\n              {toCurrency(item.price)}\r\n            </span>\r\n            <span className=\"text-xs text-black\">{item.stock} in stock</span>\r\n          </div>\r\n        </CardBody>\r\n\r\n        <CardFooter>\r\n          {item.stock > 0 ? (\r\n            <Button\r\n              onClick={() => addToCart(item)}\r\n              color=\"green\"\r\n              size=\"md\"\r\n              ripple=\"light\"\r\n              disabled={item.stock == 0}\r\n            >\r\n              Add To Cart\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              color=\"green\"\r\n              size=\"md\"\r\n              buttonType=\"outline\"\r\n              ripple=\"light\"\r\n              disabled\r\n            >\r\n              Out of Stock\r\n            </Button>\r\n          )}\r\n        </CardFooter>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Food\r\n","import Food from './Food'\r\n\r\nconst Foods = ({ products }) => {\r\n  return (\r\n    <div className=\"flex flex-wrap justify-center items-center space-x-3 space-y-3 mt-12 overflow-x-hidden\">\r\n      {products.map((item, i) => (\r\n        <Food item={item} key={i} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Foods\r\n","import { useEffect, useState } from 'react'\r\nimport Header from '../components/Header'\r\nimport Foods from '../components/Foods'\r\nimport { getProducts } from '../firebase'\r\n\r\nconst Home = () => {\r\n  const [products, setProducts] = useState([])\r\n\r\n  useEffect(() => {\r\n    getProducts().then((products) => {\r\n      products.filter((item) => {\r\n        item.price = Number(item.price)\r\n        item.qty = 0\r\n      })\r\n      setProducts(products)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Header />\r\n      <Foods products={products} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { useState } from 'react'\r\nimport Button from '@material-tailwind/react/Button'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { registerWithEmailAndPassword, logout } from '../firebase'\r\nimport { signInWithCometChat } from '../cometChat'\r\nimport { setAlert } from '../store'\r\n\r\nconst Register = () => {\r\n  const [fullname, setFullname] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [address, setAddress] = useState('')\r\n  const [account, setAccount] = useState('')\r\n  const navigate = useNavigate()\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault()\r\n    if (\r\n      email == '' ||\r\n      password == '' ||\r\n      fullname == '' ||\r\n      phone == '' ||\r\n      account == '' ||\r\n      address == ''\r\n    )\r\n      return\r\n    registerWithEmailAndPassword(\r\n      email,\r\n      password,\r\n      fullname,\r\n      phone,\r\n      account,\r\n      address\r\n    ).then((user) => {\r\n      if (user) {\r\n        logout().then(() => {\r\n          signInWithCometChat(user.uid, fullname).then(() => {\r\n            resetForm()\r\n            setAlert('Registeration in successfully')\r\n            navigate('/signin')\r\n          })\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setFullname('')\r\n    setEmail('')\r\n    setPassword('')\r\n    setPhone('')\r\n    setAccount('')\r\n    setAddress('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative flex flex-col justify-center items-center\">\r\n      <div className=\"mt-10 \">\r\n        <form\r\n          onSubmit={handleRegister}\r\n          className=\"relative flex w-full flex-wrap items-stretch w-96 px-8\"\r\n        >\r\n          <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n              placeholder=\"Fullname\"\r\n              value={fullname}\r\n              onChange={(e) => setFullname(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n              placeholder=\"************\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n              placeholder=\"081 056 8262\"\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n              placeholder=\"Wallet Address\"\r\n              value={account}\r\n              onChange={(e) => setAccount(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n              placeholder=\"Address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"relative flex w-full flex-wrap items-stretch justify-between items-center\">\r\n            <Link className=\"text-green-500\" to=\"/signin\">\r\n              Already a member? sign in\r\n            </Link>\r\n            <Button color=\"green\" ripple=\"light\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import Header from '../components/Header'\r\nimport Register from '../components/Register'\r\n\r\nconst SignUp = () => {\r\n  return (\r\n    <div className=\"signup\">\r\n      <Header />\r\n      <Register />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { logInWithEmailAndPassword } from '../firebase'\r\nimport { loginWithCometChat } from '../cometChat'\r\nimport { setAlert } from '../store'\r\nimport Button from '@material-tailwind/react/Button'\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const navigate = useNavigate()\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault()\r\n    if (email == '' || password == '') return\r\n    logInWithEmailAndPassword(email, password).then((user) => {\r\n      if (user) {\r\n        loginWithCometChat(user.uid).then(() => {\r\n          resetForm()\r\n          setAlert('Logged in successfully')\r\n          navigate('/')\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative flex flex-col justify-center items-center\">\r\n      <div className=\"mt-10 \">\r\n        <form\r\n          onSubmit={handleLogin}\r\n          className=\"relative flex w-full flex-wrap items-stretch w-96 px-8\"\r\n        >\r\n          <h4 className=\"font-semibold text-xl my-4\">Login</h4>\r\n          <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n              placeholder=\"************\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"relative flex w-full flex-wrap items-stretch justify-between items-center\">\r\n            <Link className=\"text-green-500\" to=\"/signup\">\r\n              New user sign up\r\n            </Link>\r\n            <Button color=\"green\" ripple=\"light\" type=\"submit\">\r\n              Sign In\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import Header from '../components/Header'\r\nimport Login from '../components/Login'\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <div className=\"signIn\">\r\n      <Header />\r\n      <Login />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import { Navigate } from 'react-router-dom'\r\n\r\nconst AuthGuard = ({ user, children, redirectPath = '/signin' }) => {\r\n  if (!user) {\r\n    return <Navigate to={redirectPath} replace />\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default AuthGuard\r\n","import Header from '../components/Header'\r\nimport Button from '@material-tailwind/react/Button'\r\nimport { useEffect, useState } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { updateProduct, getProduct, auth } from '../firebase'\r\nimport { setAlert } from '../store'\r\nimport { useGlobalState } from '../store'\r\n\r\nconst EditProduct = () => {\r\n  const { id } = useParams()\r\n  const navigate = useNavigate()\r\n  const [product, setProduct] = useState(null)\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState('')\r\n  const [imgURL, setImgURL] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [account] = useGlobalState('connectedAccount')\r\n\r\n  useEffect(() => {\r\n    getProduct(id).then((data) => {\r\n      if (auth.currentUser.uid != data.uid) navigate('/')\r\n      setProduct(data)\r\n      setName(data.name)\r\n      setPrice(Number(data.price))\r\n      setImgURL(data.imgURL)\r\n      setDescription(data.description)\r\n    })\r\n  }, [id])\r\n\r\n  const handleProductUpdate = (e) => {\r\n    e.preventDefault()\r\n    if (!account) {\r\n      setAlert('Please connect your metamask account!', 'red')\r\n      return\r\n    }\r\n\r\n    if (name == '' || price == '' || imgURL == '' || description == '') return\r\n    updateProduct({\r\n      ...product,\r\n      name,\r\n      price,\r\n      imgURL,\r\n      description,\r\n      account,\r\n    }).then(() => {\r\n      setAlert('Product updated successfully')\r\n      navigate('/product/' + product.id)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"editProduct\">\r\n      <Header />\r\n      <div className=\"relative flex flex-col justify-center items-center\">\r\n        <div className=\"mt-10 \">\r\n          <form\r\n            onSubmit={handleProductUpdate}\r\n            className=\"relative flex w-full flex-wrap items-stretch w-96 px-8\"\r\n          >\r\n            <h4 className=\"font-semibold text-xl my-4\">Update Product</h4>\r\n            <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n                placeholder=\"Product Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n              <input\r\n                type=\"number\"\r\n                min={1}\r\n                step={0.01}\r\n                className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n                placeholder=\"Product Price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n              <input\r\n                type=\"url\"\r\n                className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n                placeholder=\"Product Image URL\"\r\n                value={imgURL}\r\n                onChange={(e) => setImgURL(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n                placeholder=\"Product Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"relative flex w-full flex-wrap items-stretch justify-between items-center\">\r\n              <Link className=\"text-green-500\" to={`/product/` + id}>\r\n                Back to product\r\n              </Link>\r\n              <Button color=\"green\" ripple=\"light\" type=\"submit\">\r\n                Update\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditProduct\r\n","import { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { addProduct } from '../firebase'\r\nimport { setAlert } from '../store'\r\nimport { useGlobalState } from '../store'\r\nimport Button from '@material-tailwind/react/Button'\r\nimport Header from '../components/Header'\r\n\r\nconst AddProduct = () => {\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState('')\r\n  const [imgURL, setImgURL] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [account] = useGlobalState('connectedAccount')\r\n  const navigate = useNavigate()\r\n\r\n  const handleAddProduct = (e) => {\r\n    e.preventDefault()\r\n    if (!account) {\r\n      setAlert('Please connect your metamask account!', 'red')\r\n      return\r\n    }\r\n\r\n    if (name == '' || price == '' || imgURL == '' || description == '') return\r\n    addProduct({ name, price, imgURL, description, account }).then(() => {\r\n      setAlert('Product created successfully')\r\n      navigate('/')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"addProduct\">\r\n      <Header />\r\n      <div className=\"relative flex flex-col justify-center items-center\">\r\n        <div className=\"mt-10 \">\r\n          <form\r\n            onSubmit={handleAddProduct}\r\n            className=\"relative flex w-full flex-wrap items-stretch w-96 px-8\"\r\n          >\r\n            <h4 className=\"font-semibold text-xl my-4\">Add Product</h4>\r\n            <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n                placeholder=\"Product Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n              <input\r\n                type=\"number\"\r\n                min={1}\r\n                step={0.01}\r\n                className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n                placeholder=\"Product Price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n              <input\r\n                type=\"url\"\r\n                className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n                placeholder=\"Product Image URL\"\r\n                value={imgURL}\r\n                onChange={(e) => setImgURL(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm border border-blueGray-300 outline-none focus:outline-none focus:ring w-full pl-10\"\r\n                placeholder=\"Product Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"relative flex w-full flex-wrap items-stretch justify-between items-center\">\r\n              <Link className=\"text-green-500\" to=\"/\">\r\n                Back to Home\r\n              </Link>\r\n              <Button color=\"green\" ripple=\"light\" type=\"submit\">\r\n                Save Product\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddProduct\r\n","import { useState } from 'react'\r\nimport Card from '@material-tailwind/react/Card'\r\nimport CardStatusFooter from '@material-tailwind/react/CardStatusFooter'\r\nimport { Link } from 'react-router-dom'\r\nimport { Image, Button } from '@material-tailwind/react'\r\nimport { setGlobalState, useGlobalState } from '../store'\r\n\r\nconst CartItem = ({ item }) => {\r\n  const [qty, setQty] = useState(item.qty)\r\n  const [cart] = useGlobalState('cart')\r\n\r\n  const toCurrency = (num) =>\r\n    num.toLocaleString('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n    })\r\n\r\n  const increaseQty = () => {\r\n    let cartItems = [...cart]\r\n    const newItem = { ...item, qty: (item.qty += 1), stock: (item.stock -= 1) }\r\n    cartItems[item] = newItem\r\n    setGlobalState('cart', cartItems)\r\n    setQty(newItem.qty)\r\n  }\r\n\r\n  const decreaseQty = () => {\r\n    let cartItems = [...cart]\r\n    if (qty == 1) {\r\n      const index = cartItems.indexOf(item)\r\n      cartItems.splice(index, 1)\r\n    } else {\r\n      const newItem = {\r\n        ...item,\r\n        qty: (item.qty -= 1),\r\n        stock: (item.stock += 1),\r\n      }\r\n      cartItems[item] = newItem\r\n      setQty(newItem.qty)\r\n    }\r\n    setGlobalState('cart', cartItems)\r\n  }\r\n\r\n  return (\r\n    <Card className=\"flex flex-row justify-between items-end my-4\">\r\n      <Link\r\n        to={'/product/' + item.id}\r\n        className=\"h-12 w-12 object-contain mr-4\"\r\n      >\r\n        <Image\r\n          src={item.imgURL}\r\n          alt={item.name}\r\n          rounded={false}\r\n          raised={true}\r\n        />\r\n      </Link>\r\n\r\n      <CardStatusFooter\r\n        color=\"green\"\r\n        amount={toCurrency(item.price)}\r\n        date={item.name}\r\n      >\r\n        <div className=\"flex flex-row justify-center items-center mx-4\">\r\n          <Button\r\n            color=\"green\"\r\n            buttonType=\"filled\"\r\n            size=\"sm\"\r\n            rounded={false}\r\n            block={false}\r\n            iconOnly={false}\r\n            ripple=\"dark\"\r\n            onClick={decreaseQty}\r\n          >\r\n            -\r\n          </Button>\r\n          <span className=\"mx-4\">{qty}</span>\r\n          <Button\r\n            color=\"green\"\r\n            buttonType=\"filled\"\r\n            size=\"sm\"\r\n            rounded={false}\r\n            block={false}\r\n            iconOnly={false}\r\n            ripple=\"dark\"\r\n            onClick={increaseQty}\r\n            disabled={item.stock == 0}\r\n          >\r\n            +\r\n          </Button>\r\n        </div>\r\n      </CardStatusFooter>\r\n\r\n      <span className=\"text-sm text-gray-500\">\r\n        Sub Total: {toCurrency(item.price * qty)}\r\n      </span>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CartItem\r\n","import CartItem from '../components/CartItem'\r\nimport Header from '../components/Header'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '@material-tailwind/react'\r\nimport { useEffect, useState } from 'react'\r\nimport { addToOrders } from '../firebase'\r\nimport { setAlert, setGlobalState, useGlobalState } from '../store'\r\n\r\nconst Cart = () => {\r\n  const [cart] = useGlobalState('cart')\r\n  const [isLoggedIn] = useGlobalState('isLoggedIn')\r\n  const [total, setTotal] = useState(0)\r\n\r\n  const getTotal = () => {\r\n    let total = 0\r\n    cart.forEach((item) => (total += item.qty * item.price))\r\n    setTotal(total)\r\n  }\r\n\r\n  const placeOrder = () => {\r\n    if (!isLoggedIn) return\r\n\r\n    addToOrders(cart).then((data) => {\r\n      setGlobalState('cart', [])\r\n      setAlert(`Order Placed with Id: ${data.order}`)\r\n    })\r\n  }\r\n\r\n  const clearCart = () => {\r\n    setGlobalState('cart', [])\r\n  }\r\n\r\n  const toCurrency = (num) =>\r\n    num.toLocaleString('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n    })\r\n\r\n  useEffect(() => getTotal(), [cart])\r\n\r\n  return (\r\n    <div className=\"addProduct\">\r\n      <Header />\r\n      <div className=\"relative flex flex-col justify-center items-center\">\r\n        {cart.length > 0 ? (\r\n          <div className=\"mt-10 \">\r\n            <div className=\"relative flex w-full flex-wrap items-stretch px-8\">\r\n              <div className=\"flex flex-wrap justify-center items-center h-64 overflow-y-scroll\">\r\n                {cart.map((item, i) => (\r\n                  <CartItem key={i} item={item} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-row justify-between items-center my-4 px-8\">\r\n              <h4>Grand Total:</h4>\r\n              <span className=\"text-sm text-green-500\">\r\n                {toCurrency(total)}\r\n              </span>\r\n            </div>\r\n            <div className=\"flex flex-row justify-between items-center my-4 px-8\">\r\n              <Button\r\n                onClick={clearCart}\r\n                color=\"red\"\r\n                ripple=\"light\"\r\n                type=\"submit\"\r\n              >\r\n                Clear Cart\r\n              </Button>\r\n              {isLoggedIn ? (\r\n                <Button\r\n                  onClick={placeOrder}\r\n                  color=\"green\"\r\n                  ripple=\"light\"\r\n                  type=\"submit\"\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"mt-10 text-center\">\r\n            <h4 className=\"mb-4\">Cart empty, add some items to your cart</h4>\r\n            <Link to=\"/\" className=\"text-green-500\">\r\n              Choose Product\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n","import { CometChat } from '@cometchat-pro/chat'\r\nimport { sendMessage, getMessages } from '../cometChat'\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Header from '../components/Header'\r\n\r\nconst Chat = () => {\r\n  const { receiverID } = useParams()\r\n  const [message, setMessage] = useState('')\r\n  const [messages, setMessages] = useState([])\r\n\r\n  const handleSendMsg = (e) => {\r\n    e.preventDefault()\r\n    sendMessage(receiverID, message).then((msg) => {\r\n      setMessages((prevState) => [...prevState, msg])\r\n      setMessage('')\r\n      scrollToEnd()\r\n    })\r\n  }\r\n\r\n  const handleGetMessages = () => {\r\n    getMessages(receiverID).then((msgs) => {\r\n      setMessages(msgs)\r\n      scrollToEnd()\r\n    })\r\n  }\r\n\r\n  const listenForMessage = (listenerID) => {\r\n    CometChat.addMessageListener(\r\n      listenerID,\r\n      new CometChat.MessageListener({\r\n        onTextMessageReceived: (message) => {\r\n          setMessages((prevState) => [...prevState, message])\r\n          scrollToEnd()\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  const scrollToEnd = () => {\r\n    const elmnt = document.getElementById('messages-container')\r\n    elmnt.scrollTop = elmnt.scrollHeight\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetMessages()\r\n    listenForMessage(receiverID)\r\n  }, [receiverID])\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <Header />\r\n      <div className=\"flex justify-center items-center p-10\">\r\n        <div className=\"relative mx-auto w-full\">\r\n          <div className=\"border-0 rounded-lg relative flex flex-col w-full\">\r\n            <div className=\"flex items-start justify-between p-5\">\r\n              <h3 className=\"text-md font-semibold\">Chat</h3>\r\n            </div>\r\n\r\n            <div\r\n              id=\"messages-container\"\r\n              className=\"relative p-6 flex-auto h-64 overflow-y-scroll\"\r\n              style={{ height: '20rem' }}\r\n            >\r\n              <div className=\"flex flex-col justify-center items-center\">\r\n                {messages.map((msg, i) =>\r\n                  msg?.receiverId?.toLowerCase() != receiverID.toLowerCase() ? (\r\n                    <div\r\n                      key={i}\r\n                      className=\"flex flex-col justify-center items-start w-full mb-4\"\r\n                    >\r\n                      <div className=\"rounded-lg p-2 bg-green-100\">\r\n                        <p>{msg.text}</p>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div\r\n                      key={i}\r\n                      className=\"flex flex-col justify-center items-end w-full mb-4\"\r\n                    >\r\n                      <div className=\"rounded-lg p-2 bg-gray-100\">\r\n                        <p>{msg.text}</p>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <form\r\n              onSubmit={handleSendMsg}\r\n              className=\"flex flex-row justify-center items-center mt-4 py-4\"\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Type Message...\"\r\n                className=\"px-3 py-8 placeholder-blueGray-300 text-blueGray-600 relative \r\n                            bg-green-100 rounded text-sm border border-blueGray-300 \r\n                            outline-none focus:outline-none focus:ring w-full flex-1 border-0\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","import Header from '../components/Header'\r\nimport { getConversations } from '../cometChat'\r\nimport { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { auth } from '../firebase'\r\n\r\nconst ChatList = () => {\r\n  const [customers, setCustomers] = useState([])\r\n  const [loaded, setLoaded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getConversations().then((conversation) => {\r\n      console.log(conversation)\r\n      setCustomers(conversation)\r\n      setLoaded(true)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"chatList\">\r\n      <Header />\r\n      <div className=\"flex justify-center items-center p-10\">\r\n        <div className=\"relative mx-auto w-full\">\r\n          <div className=\"border-0 rounded-lg relative flex flex-col w-full\">\r\n            <div className=\"flex items-start justify-between my-4\">\r\n              <h3 className=\"text-md font-semibold\">Recent Chats</h3>\r\n            </div>\r\n            {loaded\r\n              ? customers.map((customer, i) => (\r\n                  <Conversation\r\n                    key={i}\r\n                    currentUser={auth.currentUser.uid.toLowerCase()}\r\n                    owner={customer.lastMessage.receiverId.toLowerCase()}\r\n                    conversation={customer.lastMessage}\r\n                  />\r\n                ))\r\n              : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Conversation = ({ conversation, currentUser, owner }) => {\r\n  const possessor = (key) => {\r\n    return currentUser == owner\r\n      ? conversation.sender[key]\r\n      : conversation.receiver[key]\r\n  }\r\n\r\n  const timeAgo = (date) => {\r\n    let seconds = Math.floor((new Date() - date) / 1000)\r\n    let interval = seconds / 31536000\r\n\r\n    if (interval > 1) {\r\n      return Math.floor(interval) + 'yr'\r\n    }\r\n    interval = seconds / 2592000\r\n    if (interval > 1) {\r\n      return Math.floor(interval) + 'mo'\r\n    }\r\n    interval = seconds / 86400\r\n    if (interval > 1) {\r\n      return Math.floor(interval) + 'd'\r\n    }\r\n    interval = seconds / 3600\r\n    if (interval > 1) {\r\n      return Math.floor(interval) + 'h'\r\n    }\r\n    interval = seconds / 60\r\n    if (interval > 1) {\r\n      return Math.floor(interval) + 'm'\r\n    }\r\n    return Math.floor(seconds) + 's'\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      to={'/chat/' + possessor('uid')}\r\n      className=\"flex flex-row justify-between items-center \r\n            mb-2 py-2 px-4 bg-gray-100 rounded-lg cursor-pointer\"\r\n    >\r\n      <div className=\"\">\r\n        <h4 className=\"text-sm font-semibold\">{possessor('name')}</h4>\r\n        <p className=\"text-sm text-gray-500\">{conversation.text}</p>\r\n      </div>\r\n      <span className=\"text-sm\">\r\n        {timeAgo(new Date(Number(conversation.sentAt) * 1000).getTime())}\r\n      </span>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default ChatList\r\n","import { useEffect, useState } from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport { useGlobalState, setGlobalState, latestPrice } from './store'\nimport { auth, onAuthStateChanged } from './firebase'\nimport Product from './views/Product'\nimport Home from './views/Home'\nimport SignUp from './views/SignUp'\nimport SignIn from './views/SignIn'\nimport AuthGuard from './AuthGuard'\nimport EditProduct from './views/EditProduct'\nimport AddProduct from './views/AddProduct'\nimport Cart from './views/Cart'\nimport Chat from './views/Chat'\nimport ChatList from './views/ChatList'\nimport { loadWeb3 } from './shared/Freshers'\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [alert] = useGlobalState('alert')\n\n  useEffect(() => {\n    loadWeb3()\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUser(user)\n        setGlobalState('isLoggedIn', true)\n      } else {\n        setUser(null)\n        setGlobalState('isLoggedIn', false)\n      }\n      setIsLoaded(true)\n    })\n    latestPrice()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {isLoaded ? (\n        <>\n          {alert.show ? (\n            <div\n              className={`text-white px-6 py-2 border-0 rounded relative bg-${alert.color}-500`}\n            >\n              <span className=\"text-xl inline-block mr-5 align-middle\">\n                <i className=\"fas fa-bell\" />\n              </span>\n              <span className=\"inline-block align-middle mx-4\">\n                <b className=\"capitalize\">Alert!</b> {alert.msg}!\n              </span>\n              <button\n                onClick={() =>\n                  setGlobalState('alert', { show: false, msg: '' })\n                }\n                className=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-2 mr-6 outline-none focus:outline-none\"\n              >\n                <span>×</span>\n              </button>\n            </div>\n          ) : null}\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"product/:id\" element={<Product />} />\n            <Route\n              path=\"product/edit/:id\"\n              element={\n                <AuthGuard user={user}>\n                  <EditProduct />\n                </AuthGuard>\n              }\n            />\n            <Route\n              path=\"product/add\"\n              element={\n                <AuthGuard user={user}>\n                  <AddProduct />\n                </AuthGuard>\n              }\n            />\n            <Route\n              path=\"chat/:receiverID\"\n              element={\n                <AuthGuard user={user}>\n                  <Chat />\n                </AuthGuard>\n              }\n            />\n            <Route\n              path=\"customers\"\n              element={\n                <AuthGuard user={user}>\n                  <ChatList />\n                </AuthGuard>\n              }\n            />\n            <Route path=\"cart\" element={<Cart />} />\n            <Route path=\"signin\" element={<SignIn />} />\n            <Route path=\"signup\" element={<SignUp />} />\n          </Routes>\n        </>\n      ) : null}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport '@material-tailwind/react/tailwind.css'\nimport { initCometChat } from './cometChat'\nimport App from './App'\n\ninitCometChat().then(() => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n  )\n})"],"sourceRoot":""}